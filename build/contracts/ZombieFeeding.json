{
  "contractName": "ZombieFeeding",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_targetDna",
          "type": "uint256"
        }
      ],
      "name": "feedAndMultiply",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526010600055600054600a0a60015534801561001e57600080fd5b506107318061002e6000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630dedffb8146100675780632052465e1461009e578063528b7b8f1461014b5780637bff0a01146101b8575b600080fd5b34801561007357600080fd5b5061009c6004803603810190808035906020019092919080359060200190929190505050610221565b005b3480156100aa57600080fd5b506100c9600480360381019080803590602001909291905050506102b4565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561010f5780820151818401526020810190506100f4565b50505050905090810190601f16801561013c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561015757600080fd5b506101766004803603810190808035906020019092919050505061037f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c457600080fd5b5061021f600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506103b2565b005b60006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561029057600080fd5b60028381548110151561029f57fe5b90600052602060002090600202019050505050565b6002818154811015156102c357fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050908060010154905082565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561040157600080fd5b61040a8261041a565b9050610416828261049c565b5050565b600080826040518082805190602001908083835b602083101515610453578051825260208201915060208101905060208303925061042e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490506001548181151561049357fe5b06915050919050565b6000600160026040805190810160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906104fe929190610660565b50602082015181600101555050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561061f578082015181840152602081019050610604565b50505050905090810190601f16801561064c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106a157805160ff19168380011785556106cf565b828001600101855582156106cf579182015b828111156106ce5782518255916020019190600101906106b3565b5b5090506106dc91906106e0565b5090565b61070291905b808211156106fe5760008160009055506001016106e6565b5090565b905600a165627a7a72305820714ae00e084571b62216e2bb5ae52c2345c312ce95da8e245d9d7b4fd5243b7e0029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630dedffb8146100675780632052465e1461009e578063528b7b8f1461014b5780637bff0a01146101b8575b600080fd5b34801561007357600080fd5b5061009c6004803603810190808035906020019092919080359060200190929190505050610221565b005b3480156100aa57600080fd5b506100c9600480360381019080803590602001909291905050506102b4565b6040518080602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561010f5780820151818401526020810190506100f4565b50505050905090810190601f16801561013c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b34801561015757600080fd5b506101766004803603810190808035906020019092919050505061037f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c457600080fd5b5061021f600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506103b2565b005b60006003600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561029057600080fd5b60028381548110151561029f57fe5b90600052602060002090600202019050505050565b6002818154811015156102c357fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561036f5780601f106103445761010080835404028352916020019161036f565b820191906000526020600020905b81548152906001019060200180831161035257829003601f168201915b5050505050908060010154905082565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414151561040157600080fd5b61040a8261041a565b9050610416828261049c565b5050565b600080826040518082805190602001908083835b602083101515610453578051825260208201915060208101905060208303925061042e565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490506001548181151561049357fe5b06915050919050565b6000600160026040805190810160405280868152602001858152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906104fe929190610660565b50602082015181600101555050039050336003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b8381101561061f578082015181840152602081019050610604565b50505050905090810190601f16801561064c5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106106a157805160ff19168380011785556106cf565b828001600101855582156106cf579182015b828111156106ce5782518255916020019190600101906106b3565b5b5090506106dc91906106e0565b5090565b61070291905b808211156106fe5760008160009055506001016106e6565b5090565b905600a165627a7a72305820714ae00e084571b62216e2bb5ae52c2345c312ce95da8e245d9d7b4fd5243b7e0029",
  "sourceMap": "57:245:2:-;;;133:2:1;116:19;;165:9;;159:2;:15;141:33;;57:245:2;8:9:-1;5:2;;;30:1;27;20:12;5:2;57:245:2;;;;;;;",
  "deployedSourceMap": "57:245:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;102:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;102:197:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;247:23:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;247:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;277:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;277:46:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:197;;8:9:-1;5:2;;;30:1;27;20:12;5:2;779:197:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;102::2;226:23;195:13;:24;209:9;195:24;;;;;;;;;;;;;;;;;;;;;181:38;;:10;:38;;;173:47;;;;;;;;252:7;260:9;252:18;;;;;;;;;;;;;;;;;;;;226:44;;102:197;;;:::o;247:23:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;277:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;779:197::-;890:12;878:1;846:16;:28;863:10;846:28;;;;;;;;;;;;;;;;:33;838:42;;;;;;;;905:25;924:5;905:18;:25::i;:::-;890:40;;940:29;954:5;961:7;940:13;:29::i;:::-;779:197;;:::o;620:153::-;683:4;699:9;726:4;716:15;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;716:15:1;;;;;;;;;;;;;;;;711:21;;;699:33;;756:10;;749:4;:17;;;;;;;;742:24;;620:153;;;;:::o;378:236::-;444:7;490:1;454:7;467:19;;;;;;;;;474:5;467:19;;;;481:4;467:19;;;454:33;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;454:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:37;444:47;;521:10;501:13;:17;515:2;501:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;541:16;:28;558:10;541:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;581:26;591:2;595:5;602:4;581:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;581:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;378:236;;;:::o;57:245:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.19;\n\nimport \"./zombiefactory.sol\";\n\ncontract ZombieFeeding is ZombieFactory {\n\n  function feedAndMultiply(uint _zombieId, uint _targetDna) public {\n    require(msg.sender == zombieToOwner[_zombieId]);\n    Zombie storage myZombie = zombies[_zombieId];\n    // 여기서 시작\n  }\n\n}",
  "sourcePath": "/Users/seonjinson/workspace/zombie/contracts/zombiefeeding.sol",
  "ast": {
    "absolutePath": "/Users/seonjinson/workspace/zombie/contracts/zombiefeeding.sol",
    "exportedSymbols": {
      "ZombieFeeding": [
        205
      ]
    },
    "id": 206,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 178,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/seonjinson/workspace/zombie/contracts/zombiefactory.sol",
        "file": "./zombiefactory.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 206,
        "sourceUnit": 177,
        "src": "26:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 180,
              "name": "ZombieFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 176,
              "src": "83:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieFactory_$176",
                "typeString": "contract ZombieFactory"
              }
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "83:13:2"
          }
        ],
        "contractDependencies": [
          176
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 205,
        "linearizedBaseContracts": [
          205,
          176
        ],
        "name": "ZombieFeeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "167:132:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "181:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "181:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "zombieToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "195:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 193,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "_zombieId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "209:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "195:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "181:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        223,
                        224
                      ],
                      "referencedDeclaration": 223,
                      "src": "173:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "173:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "173:47:2"
                },
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "226:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$79_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 197,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 79,
                        "src": "226:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$79_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 199,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "252:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$79_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "260:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "252:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$79_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "226:44:2"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "feedAndMultiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "127:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_targetDna",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "143:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:33:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:0:2"
            },
            "scope": 205,
            "src": "102:197:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 206,
        "src": "57:245:2"
      }
    ],
    "src": "0:302:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/seonjinson/workspace/zombie/contracts/zombiefeeding.sol",
    "exportedSymbols": {
      "ZombieFeeding": [
        205
      ]
    },
    "id": 206,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 178,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/Users/seonjinson/workspace/zombie/contracts/zombiefactory.sol",
        "file": "./zombiefactory.sol",
        "id": 179,
        "nodeType": "ImportDirective",
        "scope": 206,
        "sourceUnit": 177,
        "src": "26:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 180,
              "name": "ZombieFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 176,
              "src": "83:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieFactory_$176",
                "typeString": "contract ZombieFactory"
              }
            },
            "id": 181,
            "nodeType": "InheritanceSpecifier",
            "src": "83:13:2"
          }
        ],
        "contractDependencies": [
          176
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 205,
        "linearizedBaseContracts": [
          205,
          176
        ],
        "name": "ZombieFeeding",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "167:132:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 189,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 220,
                            "src": "181:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "181:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 191,
                            "name": "zombieToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86,
                            "src": "195:13:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 193,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 192,
                            "name": "_zombieId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 183,
                            "src": "209:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "195:24:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "181:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        223,
                        224
                      ],
                      "referencedDeclaration": 223,
                      "src": "173:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "173:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "173:47:2"
                },
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 204,
                      "src": "226:23:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$79_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 197,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 79,
                        "src": "226:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$79_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 199,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "252:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$79_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 200,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 183,
                      "src": "260:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "252:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$79_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "226:44:2"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "feedAndMultiply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "127:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "127:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "name": "_targetDna",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "143:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "143:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "126:33:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "167:0:2"
            },
            "scope": 205,
            "src": "102:197:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 206,
        "src": "57:245:2"
      }
    ],
    "src": "0:302:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-12-10T05:05:02.315Z"
}